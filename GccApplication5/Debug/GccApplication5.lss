
GccApplication5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000126  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000126  0000019a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000868  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000008ff  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  0000092e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000002df  00000000  00000000  0000094e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000e0  00000000  00000000  00000c2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000020f  00000000  00000000  00000d0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00000f1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000e8  00000000  00000000  00000f40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 91 00 	jmp	0x122	; 0x122 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/delay.h>

int main(void)
{
	
	DDRB = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	87 bb       	out	0x17, r24	; 23
	
    while(1)
    {
		PORTB = (1<<PB0);
  70:	71 e0       	ldi	r23, 0x01	; 1
		_delay_ms(1000);
		PORTB = (1<<PB1);
  72:	62 e0       	ldi	r22, 0x02	; 2
		_delay_ms(1000);
		PORTB = (1<<PB2);
  74:	54 e0       	ldi	r21, 0x04	; 4
		_delay_ms(1000);
		PORTB = (1<<PB3);
  76:	48 e0       	ldi	r20, 0x08	; 8
		_delay_ms(1000);
		PORTB = (1<<PB4);
  78:	30 e1       	ldi	r19, 0x10	; 16
		_delay_ms(1000);
		PORTB = (1<<PB5);
  7a:	20 e2       	ldi	r18, 0x20	; 32
		_delay_ms(1000);
		PORTB = (1<<PB6);
  7c:	90 e4       	ldi	r25, 0x40	; 64
		_delay_ms(1000);
		PORTB = (1<<PB7);
  7e:	80 e8       	ldi	r24, 0x80	; 128
	
	DDRB = 0xFF;
	
    while(1)
    {
		PORTB = (1<<PB0);
  80:	78 bb       	out	0x18, r23	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  82:	af e3       	ldi	r26, 0x3F	; 63
  84:	ed e0       	ldi	r30, 0x0D	; 13
  86:	f3 e0       	ldi	r31, 0x03	; 3
  88:	a1 50       	subi	r26, 0x01	; 1
  8a:	e0 40       	sbci	r30, 0x00	; 0
  8c:	f0 40       	sbci	r31, 0x00	; 0
  8e:	e1 f7       	brne	.-8      	; 0x88 <main+0x1c>
  90:	00 c0       	rjmp	.+0      	; 0x92 <main+0x26>
  92:	00 00       	nop
		_delay_ms(1000);
		PORTB = (1<<PB1);
  94:	68 bb       	out	0x18, r22	; 24
  96:	af e3       	ldi	r26, 0x3F	; 63
  98:	ed e0       	ldi	r30, 0x0D	; 13
  9a:	f3 e0       	ldi	r31, 0x03	; 3
  9c:	a1 50       	subi	r26, 0x01	; 1
  9e:	e0 40       	sbci	r30, 0x00	; 0
  a0:	f0 40       	sbci	r31, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <main+0x30>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x3a>
  a6:	00 00       	nop
		_delay_ms(1000);
		PORTB = (1<<PB2);
  a8:	58 bb       	out	0x18, r21	; 24
  aa:	af e3       	ldi	r26, 0x3F	; 63
  ac:	ed e0       	ldi	r30, 0x0D	; 13
  ae:	f3 e0       	ldi	r31, 0x03	; 3
  b0:	a1 50       	subi	r26, 0x01	; 1
  b2:	e0 40       	sbci	r30, 0x00	; 0
  b4:	f0 40       	sbci	r31, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x44>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x4e>
  ba:	00 00       	nop
		_delay_ms(1000);
		PORTB = (1<<PB3);
  bc:	48 bb       	out	0x18, r20	; 24
  be:	af e3       	ldi	r26, 0x3F	; 63
  c0:	ed e0       	ldi	r30, 0x0D	; 13
  c2:	f3 e0       	ldi	r31, 0x03	; 3
  c4:	a1 50       	subi	r26, 0x01	; 1
  c6:	e0 40       	sbci	r30, 0x00	; 0
  c8:	f0 40       	sbci	r31, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x58>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x62>
  ce:	00 00       	nop
		_delay_ms(1000);
		PORTB = (1<<PB4);
  d0:	38 bb       	out	0x18, r19	; 24
  d2:	af e3       	ldi	r26, 0x3F	; 63
  d4:	ed e0       	ldi	r30, 0x0D	; 13
  d6:	f3 e0       	ldi	r31, 0x03	; 3
  d8:	a1 50       	subi	r26, 0x01	; 1
  da:	e0 40       	sbci	r30, 0x00	; 0
  dc:	f0 40       	sbci	r31, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x6c>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x76>
  e2:	00 00       	nop
		_delay_ms(1000);
		PORTB = (1<<PB5);
  e4:	28 bb       	out	0x18, r18	; 24
  e6:	af e3       	ldi	r26, 0x3F	; 63
  e8:	ed e0       	ldi	r30, 0x0D	; 13
  ea:	f3 e0       	ldi	r31, 0x03	; 3
  ec:	a1 50       	subi	r26, 0x01	; 1
  ee:	e0 40       	sbci	r30, 0x00	; 0
  f0:	f0 40       	sbci	r31, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x80>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x8a>
  f6:	00 00       	nop
		_delay_ms(1000);
		PORTB = (1<<PB6);
  f8:	98 bb       	out	0x18, r25	; 24
  fa:	af e3       	ldi	r26, 0x3F	; 63
  fc:	ed e0       	ldi	r30, 0x0D	; 13
  fe:	f3 e0       	ldi	r31, 0x03	; 3
 100:	a1 50       	subi	r26, 0x01	; 1
 102:	e0 40       	sbci	r30, 0x00	; 0
 104:	f0 40       	sbci	r31, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x94>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x9e>
 10a:	00 00       	nop
		_delay_ms(1000);
		PORTB = (1<<PB7);
 10c:	88 bb       	out	0x18, r24	; 24
 10e:	af e3       	ldi	r26, 0x3F	; 63
 110:	ed e0       	ldi	r30, 0x0D	; 13
 112:	f3 e0       	ldi	r31, 0x03	; 3
 114:	a1 50       	subi	r26, 0x01	; 1
 116:	e0 40       	sbci	r30, 0x00	; 0
 118:	f0 40       	sbci	r31, 0x00	; 0
 11a:	e1 f7       	brne	.-8      	; 0x114 <main+0xa8>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0xb2>
 11e:	00 00       	nop
 120:	af cf       	rjmp	.-162    	; 0x80 <main+0x14>

00000122 <_exit>:
 122:	f8 94       	cli

00000124 <__stop_program>:
 124:	ff cf       	rjmp	.-2      	; 0x124 <__stop_program>
